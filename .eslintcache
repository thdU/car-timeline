[{"C:\\Users\\lordc\\Documents\\webdev\\car-timeline-git\\src\\index.js":"1","C:\\Users\\lordc\\Documents\\webdev\\car-timeline-git\\src\\reportWebVitals.js":"2","C:\\Users\\lordc\\Documents\\webdev\\car-timeline-git\\src\\App.js":"3","C:\\Users\\lordc\\Documents\\webdev\\car-timeline-git\\src\\Timeline.js":"4"},{"size":500,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"6"},{"size":3618,"mtime":1607886886098,"results":"8","hashOfConfig":"6"},{"size":2889,"mtime":1607904504201,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"wxru6k",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"C:\\Users\\lordc\\Documents\\webdev\\car-timeline-git\\src\\index.js",[],["20","21"],"C:\\Users\\lordc\\Documents\\webdev\\car-timeline-git\\src\\reportWebVitals.js",[],"C:\\Users\\lordc\\Documents\\webdev\\car-timeline-git\\src\\App.js",[],"C:\\Users\\lordc\\Documents\\webdev\\car-timeline-git\\src\\Timeline.js",["22","23"],"import React from 'react';\r\nimport Chart from \"react-apexcharts\";\r\nimport differenceInMonths from 'date-fns/differenceInMonths'\r\nimport differenceInYears from 'date-fns/differenceInYears'\r\nimport './Timeline.scss';\r\n\r\nconst Timeline = (props) => {\r\n\r\n  const carsCopy = JSON.parse(JSON.stringify(props.cars));\r\n  carsCopy.sort((a, b) => (a.startDate - b.startDate));\r\n\r\n  const getChartEndtime = () => {\r\n    let chartEndtime;\r\n\r\n    for (const car of carsCopy) {\r\n      if (!chartEndtime || car.endDate > chartEndtime) {\r\n        chartEndtime = car.endDate;\r\n      }\r\n    }\r\n\r\n    if (!chartEndtime) {\r\n      chartEndtime = new Date().getTime();\r\n    }\r\n\r\n    return chartEndtime;\r\n  }\r\n\r\n  const options = {\r\n    chart: {\r\n      animations: {\r\n        enabled: false,\r\n      },\r\n      toolbar: {\r\n        show: true,\r\n        tools: {\r\n          download: '<img src=\"./download_icon.png\" class=\"ico-download\" width=\"30\">',\r\n        },\r\n      }\r\n    },\r\n    title: {\r\n      text: 'My Car History',\r\n      align: 'center',\r\n      style: {\r\n        fontSize: '18px',\r\n      }\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        horizontal: true,\r\n        distributed: true,\r\n        dataLabels: {\r\n          hideOverflowingLabels: false\r\n        }\r\n      }\r\n    },\r\n    dataLabels: {\r\n      enabled: false,\r\n      // formatter: function (val, opts) {\r\n      //   // var label = opts.w.globals.labels[opts.dataPointIndex]\r\n      //   if (val.length === 2 && val[1] > val[0]) {\r\n      //     const years = differenceInYears(val[1], val[0]);\r\n      //     const months = differenceInMonths(val[1], val[0]);\r\n\r\n      //     if (years === 0) {\r\n      //       return `${months} m`;\r\n      //     } else if (months % 12 === 0) {\r\n      //       return `${years} yr`;\r\n      //     }\r\n\r\n      //     return `${years} yr, ${months - 12 * years} m`;\r\n      //   }\r\n\r\n      //   return '';\r\n      // },\r\n    },\r\n    xaxis: {\r\n      type: 'datetime',\r\n      max: getChartEndtime(),\r\n      labels: {\r\n        style: {\r\n          fontSize: '14px',\r\n        }\r\n      }\r\n    },\r\n    yaxis: {\r\n      show: true,\r\n      labels: {\r\n        align: 'center',\r\n        maxWidth: '200px',\r\n        style: {\r\n          fontSize: '16px',\r\n        },\r\n      },\r\n    },\r\n    grid: {\r\n      row: {\r\n        colors: ['#f3f4f5', '#fff'],\r\n        opacity: 1\r\n      }\r\n    },\r\n    tooltip: {\r\n      enabled: false,\r\n    }\r\n  };\r\n\r\n  const data = carsCopy.map(car => {\r\n    return {\r\n      x: [`${car.year} ${car.make} ${car.model}`, `${car.desc}`],\r\n      y: [\r\n        car.startDate,\r\n        car.endDate\r\n      ],\r\n      fillColor: '#008FFB'\r\n    }\r\n  });\r\n\r\n  const series = [\r\n    {\r\n      data\r\n    }\r\n  ];\r\n\r\n\r\n  return (\r\n    <div id=\"chart\">\r\n      <Chart\r\n        options={options}\r\n        series={series}\r\n        type=\"rangeBar\"\r\n        width={900}\r\n      />\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default Timeline;",{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","severity":1,"message":"29","line":3,"column":8,"nodeType":"30","messageId":"31","endLine":3,"endColumn":26},{"ruleId":"28","severity":1,"message":"32","line":4,"column":8,"nodeType":"30","messageId":"31","endLine":4,"endColumn":25},"no-native-reassign",["33"],"no-negated-in-lhs",["34"],"no-unused-vars","'differenceInMonths' is defined but never used.","Identifier","unusedVar","'differenceInYears' is defined but never used.","no-global-assign","no-unsafe-negation"]